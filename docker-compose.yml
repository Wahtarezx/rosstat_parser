version: '3.8'

services:

  web:
    build:
      context: ./src
      dockerfile: backend.dockerfile
    container_name: ${PROJECT_SLUG}_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - static_dir:/opt/src/static/
      - media_dir:/opt/src/media/
      - ./src:/opt/src:rw
    networks:
      - app-network

  celery:
    build:
      context: ./src
      dockerfile: celery.dockerfile
    container_name: ${PROJECT_SLUG}_celery
    env_file:
      - .env
    volumes:
      - ./src/:/opt/src/:rw
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: ${PROJECT_SLUG}_db
    volumes:
      - ./dumps:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - app-network


  redis:
    image: redis:latest
    container_name: ${PROJECT_SLUG}_redis
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app-network


volumes:
  static_dir:
  media_dir:
  pgdata:
  redis_data:

networks:
  app-network:
    driver: bridge
